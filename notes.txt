A programming language: java,js,php,golang,c++(one framework)
a database: mongo,mysql,postgres,sqlite(orm,odm)

=========
a js based backend (data,file,third party api)
a js runtime: nodejs/deno/bun

//<directory struture>
package.json
.env
-> src
index(db connects)
app (config cookie,urlencode)
constants(enums,db-name)
->db
->models (data struture and schema)
->controllers (functionaity) (methods functions)
->middlerware 
->routes
->utils
->more(Depends)


=====
computer----->(express)<------server
//express
-listen
-get request


//letsGo
-https://expressjs.com/
-npm init
-npm install express
=env
-dotenv: https://www.npmjs.com/package/dotenv
-npm install dotenv --save
-require('dotenv').config()
-process.env.PORT


=====================================
//fullstack_basic
->backend
-npm init -y
-npm i express 
-file server.js
-"type":"module" for import express from 'express';
-use json formatter to view json text
-npm install cors  var cors = require('cors')  app.use(cors())

->frontend
-npm create vite@latest .
-npm install
-npm run dev
-npm install axios


->has been blocked by CORS policy
-cross origin
-url and port both should be same
-solution:  make url and port whitelist & backend may cors (backend resolution)
-(ghar k ander sabko allow mat kro)
-proxy (frontend resolution)


->Proxies (need only /api to mention not whole)
for vite only
vite.config.js
export default defineConfig({
  server: {
    proxy: {
      '/api':  'http://localhost:3000', // Adjust the port to match your backend server
    }
  },
  plugins: [react()],
})


->npm run build (dist)